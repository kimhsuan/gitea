on:
  workflow_dispatch:

jobs:
  deploy:
    if: github.ref_name == 'main' || github.ref_name == 'test'
    name: Deploy to ${{ github.ref_name == 'main' && 'prod' || 'test' }} environment
    runs-on: ubuntu-22.04
    environment: ${{ github.ref_name == 'main' && 'prod' || 'test' }}
    permissions:
      contents: read
      id-token: write
    env:
      ENVIRONMENT: ${{ github.ref_name == 'main' && 'prod' || 'test' }}
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      SSH_PUBLIC_KEY: ${{ secrets.SSH_PUBLIC_KEY }}
      PROJECT_ID: ${{ vars.PROJECT_ID }}
      ORG_NAME: ${{ vars.ORG_NAME }}
      ZONE: ${{ vars.ZONE }}
      SSH_USER: ${{ vars.SSH_USER }}
      DOCKER_COMPOSE_ENV_FILE: ${{ vars.DOCKER_COMPOSE_ENV_FILE }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Validate required secrets and variables
        run: |
          required_vars=(
            "ENVIRONMENT"
            "SSH_PRIVATE_KEY"
            "SSH_PUBLIC_KEY"
            "PROJECT_ID"
            "ORG_NAME"
            "ZONE"
            "SSH_USER"
            "DOCKER_COMPOSE_ENV_FILE"
          )

          for var in "${required_vars[@]}"; do
            if [ -z "${!var}" ]; then
              echo "Error: Variable or secret '$var' is not set."
              exit 1
            fi
          done

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          project_id: ${{ vars.PROJECT_ID }}
          workload_identity_provider: ${{ vars.WORKLOAD_IDENTITY_PROVIDER }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: 532.0.0

      - name: Setup SSH and Deploy services
        working-directory: ./compose
        run: |
          # Setup SSH Keys
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          echo "${SSH_PRIVATE_KEY}" > ~/.ssh/google_compute_engine
          chmod 600 ~/.ssh/google_compute_engine
          echo "${SSH_PUBLIC_KEY}" > ~/.ssh/google_compute_engine.pub
          chmod 644 ~/.ssh/google_compute_engine.pub

          # Establish SSH Tunnel and run Docker Compose
          APP_NAME=${{ vars.APP_NAME || 'gitea' }}
          INSTANCE_NAME=${ORG_NAME}-${APP_NAME}-${ENVIRONMENT}
          gcloud compute ssh ${SSH_USER}@${INSTANCE_NAME} --tunnel-through-iap --quiet \
            --zone ${ZONE} \
            --project ${PROJECT_ID} \
            --ssh-flag='-qNf -L 12375:127.0.0.1:2375'

          # Deploy Docker Compose services
          echo "${DOCKER_COMPOSE_ENV_FILE}" > .env
          DOCKER_HOST=tcp://127.0.0.1:12375 docker compose pull --quiet
          DOCKER_HOST=tcp://127.0.0.1:12375 docker compose up --detach --quiet-pull
